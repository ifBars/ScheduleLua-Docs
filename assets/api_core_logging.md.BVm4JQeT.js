import{_ as a,c as t,o as i,ag as s}from"./chunks/framework.D8iaFA0a.js";const c=JSON.parse('{"title":"Logging API","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/logging.md","filePath":"api/core/logging.md","lastUpdated":1747817230000}'),o={name:"api/core/logging.md"};function r(n,e,l,h,g,d){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="logging-api" tabindex="-1">Logging API <a class="header-anchor" href="#logging-api" aria-label="Permalink to &quot;Logging API&quot;">​</a></h1><p>The Logging API provides functions for outputting information, warnings, and errors to the game console. These functions are essential for debugging and providing feedback in your scripts.</p><h2 id="log" tabindex="-1">Log <a class="header-anchor" href="#log" aria-label="Permalink to &quot;Log&quot;">​</a></h2><p><strong>Signature:</strong> <code>void Log(string message)</code></p><p><strong>Description:</strong> Outputs a standard informational message to the console.</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>message</code> (string): The message to log</li></ul><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p>None.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Player entered the town area!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>Use for general information and debugging</li><li>Messages appear in white text in the console</li></ul><h2 id="logwarning" tabindex="-1">LogWarning <a class="header-anchor" href="#logwarning" aria-label="Permalink to &quot;LogWarning&quot;">​</a></h2><p><strong>Signature:</strong> <code>void LogWarning(string message)</code></p><p><strong>Description:</strong> Outputs a warning message to the console.</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>message</code> (string): The warning message to log</li></ul><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p>None.</p><h3 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogWarning</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Player health is below 20%!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="notes-1" tabindex="-1">Notes <a class="header-anchor" href="#notes-1" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>Use for potential issues that don&#39;t prevent script execution</li><li>Messages appear in yellow text in the console</li><li>Use sparingly to avoid console clutter</li></ul><h2 id="logerror" tabindex="-1">LogError <a class="header-anchor" href="#logerror" aria-label="Permalink to &quot;LogError&quot;">​</a></h2><p><strong>Signature:</strong> <code>void LogError(string message)</code></p><p><strong>Description:</strong> Outputs an error message to the console.</p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li><code>message</code> (string): The error message to log</li></ul><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p>None.</p><h3 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Failed to find NPC: &quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> npcName)</span></span></code></pre></div><h3 id="notes-2" tabindex="-1">Notes <a class="header-anchor" href="#notes-2" aria-label="Permalink to &quot;Notes&quot;">​</a></h3><ul><li>Use for errors that might affect script functionality</li><li>Messages appear in red text in the console</li><li>Does not stop script execution - use error handling for that</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ul><li>Use the appropriate log level for different types of messages</li><li>Include relevant context in log messages</li><li>For variables, convert to strings or use concatenation</li><li>Avoid excessive logging, especially in the <code>Update()</code> function</li><li>Use logging during development and debug builds, but consider reducing it in release scripts</li></ul><h2 id="related-functions" tabindex="-1">Related Functions <a class="header-anchor" href="#related-functions" aria-label="Permalink to &quot;Related Functions&quot;">​</a></h2><ul><li>No directly related functions, but logging is commonly used with all other API functions for debugging</li></ul>',39)]))}const u=a(o,[["render",r]]);export{c as __pageData,u as default};
