import{_ as t,c as a,o as i,ag as r}from"./chunks/framework.D8iaFA0a.js";const p=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md","lastUpdated":1747817230000}'),n={name:"api/index.md"};function o(d,e,l,c,s,h){return i(),a("div",null,e[0]||(e[0]=[r('<h1 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">â€‹</a></h1><p>This section provides documentation for the ScheduleLua API functions and modules.</p><div class="custom-block warning"><p><strong>Beta Development Notice:</strong> ScheduleLua is currently in beta development. APIs may change, and some features described here are not yet fully implemented.</p></div><h2 id="implementation-status" tabindex="-1">Implementation Status <a class="header-anchor" href="#implementation-status" aria-label="Permalink to &quot;Implementation Status&quot;">â€‹</a></h2><p>The ScheduleLua API is being actively developed. Here&#39;s the current implementation status of major API categories:</p><table tabindex="0"><thead><tr><th>API Category</th><th>Status</th></tr></thead><tbody><tr><td>Core API</td><td>âœ… Stable</td></tr><tr><td>Player API</td><td>ðŸ”„ Partial</td></tr><tr><td>World API</td><td>ðŸ”„ Partial</td></tr><tr><td>NPC API</td><td>ðŸ”„ Partial</td></tr><tr><td>Helper Functions</td><td>ðŸ”„ Partial</td></tr><tr><td>Windows API</td><td>ðŸ”„ Partial</td></tr><tr><td>UI API</td><td>ðŸ”„ Partial</td></tr><tr><td>Registry API</td><td>ðŸ”„ Partial</td></tr><tr><td>Economy API</td><td>ðŸ”„ Partial</td></tr><tr><td>Law API</td><td>ðŸ”„ Partial</td></tr></tbody></table><p>See the <a href="/ScheduleLua-Docs/guide/development-status.html">Development Status</a> page for more detailed information.</p><h2 id="api-categories" tabindex="-1">API Categories <a class="header-anchor" href="#api-categories" aria-label="Permalink to &quot;API Categories&quot;">â€‹</a></h2><h3 id="core-api-âœ…-stable" tabindex="-1"><a href="./core/logging.html">Core API</a> - âœ… Stable <a class="header-anchor" href="#core-api-âœ…-stable" aria-label="Permalink to &quot;[Core API](./core/logging.md) - âœ… Stable&quot;">â€‹</a></h3><p>Core functionality including logging, commands, timing, general game object manipulation, and <a href="./core/globals.html">global variables</a>.</p><h3 id="player-api-ðŸ”„-partial" tabindex="-1"><a href="./player/">Player API</a> - ðŸ”„ Partial <a class="header-anchor" href="#player-api-ðŸ”„-partial" aria-label="Permalink to &quot;[Player API](./player/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Functions for interacting with the player character, including movement, inventory, stats, and state.</p><h3 id="npc-api-ðŸ”„-partial" tabindex="-1"><a href="./npc/">NPC API</a> - ðŸ”„ Partial <a class="header-anchor" href="#npc-api-ðŸ”„-partial" aria-label="Permalink to &quot;[NPC API](./npc/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Tools for finding, managing, and interacting with NPCs in the game world.</p><h3 id="world-api-ðŸ”„-partial" tabindex="-1"><a href="./world/">World API</a> - ðŸ”„ Partial <a class="header-anchor" href="#world-api-ðŸ”„-partial" aria-label="Permalink to &quot;[World API](./world/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Functions for interacting with the game world, including time, map regions, and explosions.</p><h3 id="helper-functions-ðŸ”„-partial" tabindex="-1"><a href="./helper/">Helper Functions</a> - ðŸ”„ Partial <a class="header-anchor" href="#helper-functions-ðŸ”„-partial" aria-label="Permalink to &quot;[Helper Functions](./helper/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Utility functions such as Vector3 operations to simplify common tasks.</p><h3 id="unity-api-ðŸ”„-partial" tabindex="-1"><a href="./unity/">Unity API</a> - ðŸ”„ Partial <a class="header-anchor" href="#unity-api-ðŸ”„-partial" aria-label="Permalink to &quot;[Unity API](./unity/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Functions for Unity-specific features like key input detection.</p><h3 id="ui-api-ðŸ”„-experimental" tabindex="-1"><a href="./ui/">UI API</a> - ðŸ”„ Experimental <a class="header-anchor" href="#ui-api-ðŸ”„-experimental" aria-label="Permalink to &quot;[UI API](./ui/) - ðŸ”„ Experimental&quot;">â€‹</a></h3><p>Create notifications and basic UI elements. Advanced features are still in development.</p><h3 id="registry-api-ðŸ”„-experimental" tabindex="-1">Registry API - ðŸ”„ Experimental <a class="header-anchor" href="#registry-api-ðŸ”„-experimental" aria-label="Permalink to &quot;Registry API - ðŸ”„ Experimental&quot;">â€‹</a></h3><p>Store and retrieve data persistent across script executions and game sessions.</p><h3 id="economy-api-ðŸ”„-partial" tabindex="-1"><a href="./economy/">Economy API</a> - ðŸ”„ Partial <a class="header-anchor" href="#economy-api-ðŸ”„-partial" aria-label="Permalink to &quot;[Economy API](./economy/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Interact with the game&#39;s economy system, including player money and transactions.</p><h3 id="law-api-ðŸ”„-partial" tabindex="-1"><a href="./law/">Law API</a> - ðŸ”„ Partial <a class="header-anchor" href="#law-api-ðŸ”„-partial" aria-label="Permalink to &quot;[Law API](./law/) - ðŸ”„ Partial&quot;">â€‹</a></h3><p>Interact with the game&#39;s law system, including curfew management.</p><h2 id="function-naming-conventions" tabindex="-1">Function Naming Conventions <a class="header-anchor" href="#function-naming-conventions" aria-label="Permalink to &quot;Function Naming Conventions&quot;">â€‹</a></h2><p>ScheduleLua follows consistent naming conventions to make the API intuitive:</p><ul><li><code>Get*</code> - Functions that retrieve data (e.g., <code>GetPlayerPosition</code>, <code>GetGameTime</code>)</li><li><code>Set*</code> - Functions that modify data (e.g., <code>SetPlayerHealth</code>, <code>SetNPCPosition</code>)</li><li><code>Find*</code> - Functions that search for specific entities (e.g., <code>FindNPC</code>, <code>FindGameObject</code>)</li><li><code>Is*</code> - Functions that return boolean values (e.g., <code>IsNightTime</code>, <code>IsNPCInRegion</code>)</li><li><code>Register*</code> - Functions that register callbacks or commands (e.g., <code>RegisterCommand</code>)</li><li><code>Unregister*</code> - Functions that remove registered callbacks or commands (e.g., <code>UnregisterCommand</code>)</li><li><code>On*</code> - Callback functions triggered by specific events (e.g., <code>OnPlayerReady</code>, <code>OnDayChanged</code>)</li></ul><h2 id="function-documentation-format" tabindex="-1">Function Documentation Format <a class="header-anchor" href="#function-documentation-format" aria-label="Permalink to &quot;Function Documentation Format&quot;">â€‹</a></h2><p>Each function in the API is documented with the following information:</p><ul><li><strong>Signature</strong>: The function&#39;s parameter types and return value</li><li><strong>Implementation Status</strong>: Current development status (stable, experimental, planned)</li><li><strong>Description</strong>: What the function does</li><li><strong>Parameters</strong>: Details about each parameter</li><li><strong>Returns</strong>: Description of what the function returns</li><li><strong>Examples</strong>: Code examples showing how to use the function</li><li><strong>Notes</strong>: Additional information, limitations, and best practices</li></ul><h2 id="script-lifecycle-hooks" tabindex="-1">Script Lifecycle Hooks <a class="header-anchor" href="#script-lifecycle-hooks" aria-label="Permalink to &quot;Script Lifecycle Hooks&quot;">â€‹</a></h2><p>Your Lua scripts can implement several lifecycle hooks that are called at specific points during execution:</p><table tabindex="0"><thead><tr><th>Hook</th><th>Status</th><th>Description</th></tr></thead><tbody><tr><td><code>Initialize()</code></td><td>âœ… Stable</td><td>Called when the script is first loaded</td></tr><tr><td><code>Update()</code></td><td>âœ… Stable</td><td>Called every frame</td></tr><tr><td><code>OnConsoleReady()</code></td><td>âœ… Stable</td><td>Called when the console is loaded and ready</td></tr><tr><td><code>OnPlayerReady()</code></td><td>âœ… Stable</td><td>Called when the player is loaded and ready</td></tr><tr><td><code>OnSceneLoaded(sceneName)</code></td><td>âœ… Stable</td><td>Called when a new scene is loaded</td></tr><tr><td><code>OnDayChanged(day)</code></td><td>ðŸ”„ Partial</td><td>Called when the game day changes</td></tr><tr><td><code>OnTimeChanged(time)</code></td><td>ðŸ”„ Partial</td><td>Called when the game time changes</td></tr><tr><td><code>OnPlayerHealthChanged(newHealth)</code></td><td>ðŸ”„ Partial</td><td>Called when player health changes</td></tr><tr><td><code>OnPlayerEnergyChanged(newEnergy)</code></td><td>ðŸ”„ Partial</td><td>Called when player energy changes</td></tr><tr><td><code>Shutdown()</code></td><td>âœ… Stable</td><td>Called when the script is unloaded</td></tr></tbody></table><h2 id="contributing-to-the-api" tabindex="-1">Contributing to the API <a class="header-anchor" href="#contributing-to-the-api" aria-label="Permalink to &quot;Contributing to the API&quot;">â€‹</a></h2><p>ScheduleLua is an open-source project in active development. If you&#39;d like to contribute:</p><ul><li>Check the <a href="https://github.com/ScheduleLua/ScheduleLua-Framework" target="_blank" rel="noreferrer">GitHub repository</a> for current issues and tasks</li><li>Join the <a href="https://discord.gg/Ab8snpEFDn" target="_blank" rel="noreferrer">ScheduleLua Discord</a> to discuss development</li><li>Report bugs or suggest improvements through <a href="https://github.com/ScheduleLua/ScheduleLua-Framework/issues" target="_blank" rel="noreferrer">GitHub Issues</a></li></ul><p>For detailed information about each function and module, explore the sidebar navigation.</p>',41)]))}const m=t(n,[["render",o]]);export{p as __pageData,m as default};
