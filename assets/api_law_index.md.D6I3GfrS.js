import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.D8iaFA0a.js";const c=JSON.parse('{"title":"Law API","description":"","frontmatter":{},"headers":[],"relativePath":"api/law/index.md","filePath":"api/law/index.md","lastUpdated":1747817230000}'),t={name:"api/law/index.md"};function l(h,s,p,r,o,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="law-api" tabindex="-1">Law API <a class="header-anchor" href="#law-api" aria-label="Permalink to &quot;Law API&quot;">​</a></h1><p>The Law API provides functions for interacting with the law enforcement and legal systems in Schedule 1. This includes curfew management, crime reporting, and police response.</p><div class="custom-block warning"><p><strong>Implementation Status:</strong> Partially implemented. Curfew functionality is available, but other features are still in development.</p></div><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The Law API allows mod scripts to:</p><ul><li>Get information about the current legal status of areas and activities</li><li>Monitor and respond to crime events</li><li>Interact with the curfew system</li><li>Create custom law enforcement scenarios</li></ul><h2 id="available-functions" tabindex="-1">Available Functions <a class="header-anchor" href="#available-functions" aria-label="Permalink to &quot;Available Functions&quot;">​</a></h2><ul><li><a href="./curfew.html">Curfew Management</a> - Functions related to the city curfew system</li></ul><h2 id="planned-features" tabindex="-1">Planned Features <a class="header-anchor" href="#planned-features" aria-label="Permalink to &quot;Planned Features&quot;">​</a></h2><ul><li>Police response system</li><li>Crime reporting and tracking</li><li>Legal status of player activities</li><li>Custom law enforcement scenarios</li><li>Legal consequences system</li></ul><h2 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Monitor curfew status</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isCurfewActive </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IsCurfewActive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isCurfewActive </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        -- Do something during curfew</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ShowNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Curfew is currently active! Stay inside or hide.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Register a callback for when curfew status changes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RegisterCurfewChangeCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isActive)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isActive </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ShowNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;WARNING: Curfew has begun!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ShowNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Curfew has ended.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>The Law API is designed to work with the NPC and Player APIs</li><li>It provides a way to create custom gameplay scenarios involving law enforcement</li><li>Curfew functionality is fully implemented and ready to use</li><li>Future updates will expand the capabilities of this API</li></ul>`,14)]))}const u=i(t,[["render",l]]);export{c as __pageData,u as default};
