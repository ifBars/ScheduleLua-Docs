import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.D8iaFA0a.js";const c=JSON.parse('{"title":"ScheduleLua Mod System","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mod-system.md","filePath":"guide/mod-system.md","lastUpdated":1747817230000}'),t={name:"guide/mod-system.md"};function l(p,s,h,o,d,r){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="schedulelua-mod-system" tabindex="-1">ScheduleLua Mod System <a class="header-anchor" href="#schedulelua-mod-system" aria-label="Permalink to &quot;ScheduleLua Mod System&quot;">​</a></h1><p>The ScheduleLua Mod System allows you to create modular Lua mods with dependencies, versions, and exported functionality. This system is designed to help organize your code and enable better interoperability between different mods.</p><h2 id="folder-structure" tabindex="-1">Folder Structure <a class="header-anchor" href="#folder-structure" aria-label="Permalink to &quot;Folder Structure&quot;">​</a></h2><p>The mod system uses the existing scripts directory. Your mods should be placed in the ScheduleLua/Scripts directory, with each mod in its own folder:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Mods/</span></span>
<span class="line"><span>  ScheduleLua/</span></span>
<span class="line"><span>    Scripts/</span></span>
<span class="line"><span>      single_script.lua        # Still supported but might be deprecated in favor of mod system</span></span>
<span class="line"><span>      my_mod/                  # Mod folder</span></span>
<span class="line"><span>        manifest.json          # Required: Mod metadata</span></span>
<span class="line"><span>        init.lua               # Required: Main entry point</span></span>
<span class="line"><span>        utils.lua              # Optional: Additional scripts</span></span>
<span class="line"><span>        features/              # Optional: Subdirectories for organization</span></span>
<span class="line"><span>          feature1.lua</span></span>
<span class="line"><span>          feature2.lua</span></span></code></pre></div><h2 id="manifest-file" tabindex="-1">Manifest File <a class="header-anchor" href="#manifest-file" aria-label="Permalink to &quot;Manifest File&quot;">​</a></h2><p>Each mod must have a <code>manifest.json</code> file in its root folder with the following structure:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My Mod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Display name</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Semantic version</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Description of the mod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Short description</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Your Name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Author name</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;init.lua&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Main script (default: init.lua)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [                               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Additional scripts to load</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;utils.lua&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;features/feature1.lua&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;features/feature2.lua&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Other mods this mod depends on</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;other_mod&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;api_version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1.2&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                   // ScheduleLua API version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="creating-a-mod" tabindex="-1">Creating a Mod <a class="header-anchor" href="#creating-a-mod" aria-label="Permalink to &quot;Creating a Mod&quot;">​</a></h2><p>To create a mod:</p><ol><li>Create a folder in the <code>Mods/ScheduleLua/Scripts</code> directory.</li><li>Create a <code>manifest.json</code> file with your mod&#39;s metadata.</li><li>Create an <code>init.lua</code> file as the main entry point.</li><li>Add any additional script files and list them in the manifest.</li><li>Optionally create subdirectories for organization.</li></ol><p>Example structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>farming_mod/</span></span>
<span class="line"><span>  manifest.json</span></span>
<span class="line"><span>  init.lua</span></span>
<span class="line"><span>  utils.lua</span></span>
<span class="line"><span>  crops/</span></span>
<span class="line"><span>    wheat.lua</span></span>
<span class="line"><span>    cotton.lua</span></span></code></pre></div><h2 id="using-mods" tabindex="-1">Using Mods <a class="header-anchor" href="#using-mods" aria-label="Permalink to &quot;Using Mods&quot;">​</a></h2><p>When your mod is loaded, two special variables are set in the Lua environment:</p><ul><li><code>MOD_NAME</code>: The folder name of your mod</li><li><code>MOD_PATH</code>: The full path to your mod folder</li></ul><p>These can be used to reference files within your mod:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> imagePath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MOD_PATH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/images/icon.png&quot;</span></span></code></pre></div><h2 id="mod-lifecycle" tabindex="-1">Mod Lifecycle <a class="header-anchor" href="#mod-lifecycle" aria-label="Permalink to &quot;Mod Lifecycle&quot;">​</a></h2><p>Mods are loaded in this order:</p><ol><li>Dependencies are loaded before the mods that depend on them</li><li>The <code>init.lua</code> file is loaded first, then additional files listed in the manifest</li><li>The <code>Initialize()</code> function is called if it exists</li><li>The <code>Update()</code> function is called every frame if it exists</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><strong>Use namespaces</strong>: Store your mod&#39;s data in a global table with a unique name to avoid conflicts:</li></ol><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MY_MOD </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    settings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li><strong>Check for dependencies</strong>:</li></ol><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IsModLoaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;required_mod&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    LogError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This mod requires &#39;required_mod&#39; to be installed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><ol start="3"><li><p><strong>Organize your code</strong> by splitting it into multiple files by functionality.</p></li><li><p><strong>Document your exports</strong> so other mod authors know what functions are available.</p></li></ol>`,27)]))}const u=i(t,[["render",l]]);export{c as __pageData,u as default};
