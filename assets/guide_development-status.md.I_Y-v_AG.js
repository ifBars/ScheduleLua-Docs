import{_ as e,c as d,o as a,ag as r}from"./chunks/framework.D8iaFA0a.js";const m=JSON.parse('{"title":"Development Status","description":"","frontmatter":{},"headers":[],"relativePath":"guide/development-status.md","filePath":"guide/development-status.md","lastUpdated":1747817230000}'),i={name:"guide/development-status.md"};function n(o,t,s,l,h,c){return a(),d("div",null,t[0]||(t[0]=[r('<h1 id="development-status" tabindex="-1">Development Status <a class="header-anchor" href="#development-status" aria-label="Permalink to &quot;Development Status&quot;">​</a></h1><div class="custom-block warning"><p><strong>Beta Software:</strong> ScheduleLua is currently in beta development. This page tracks the implementation status of various features.</p></div><h2 id="implementation-status" tabindex="-1">Implementation Status <a class="header-anchor" href="#implementation-status" aria-label="Permalink to &quot;Implementation Status&quot;">​</a></h2><p>This page provides a transparent overview of what&#39;s currently working in ScheduleLua beta, what&#39;s partially implemented, and what&#39;s planned for future releases.</p><h3 id="status-legend" tabindex="-1">Status Legend <a class="header-anchor" href="#status-legend" aria-label="Permalink to &quot;Status Legend&quot;">​</a></h3><ul><li>✅ <strong>Implemented</strong> - Feature is fully working and stable</li><li>🟡 <strong>Partial</strong> - Feature is partially implemented but may have limitations</li><li>🔄 <strong>In Progress</strong> - Feature is actively being developed</li><li>📅 <strong>Planned</strong> - Feature is planned for future implementation</li><li>❌ <strong>Not Planned</strong> - Feature is not yet planned</li></ul><h2 id="core-systems" tabindex="-1">Core Systems <a class="header-anchor" href="#core-systems" aria-label="Permalink to &quot;Core Systems&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Feature</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>Script Loading</td><td>✅</td><td>Scripts are properly loaded from the Scripts directory</td></tr><tr><td>Error Handling</td><td>🟡</td><td>Basic error reporting works, advanced diagnostics planned</td></tr><tr><td>Hot Reloading</td><td>✅</td><td>Scripts &amp; Mods can be manually reloaded with the <code>luareload</code> command or automatically reloaded upon file change when the <code>EnableHotReload</code> MelonPreference is enabled</td></tr><tr><td>Lifecycle Event Hooks</td><td>✅</td><td>Core events like Initialize(), Update(), and Shutdown() function properly</td></tr><tr><td>Performance Profiling</td><td>🔄</td><td>Basic performance monitoring is in development</td></tr><tr><td>Debugging Tools</td><td>📅</td><td>Comprehensive debugging utilities planned</td></tr></tbody></table><h2 id="example-scripts-status" tabindex="-1">Example Scripts Status <a class="header-anchor" href="#example-scripts-status" aria-label="Permalink to &quot;Example Scripts Status&quot;">​</a></h2><p>Most example scripts located in the <code>Resources</code> directory are fully functional and demonstrate working features of the API. If you&#39;re looking for working examples of API usage, refer to these files:</p><ul><li><code>example.lua</code> - Core API functionality</li><li><code>ui_example.lua</code> - UI system features</li><li><code>registry_example.lua</code> - Data storage functionality (<strong>Note</strong>: May have limited functionality as Registry system is still in development)</li><li><code>economy_example.lua</code> - Economy and player money systems</li><li><code>curfew_example.lua</code> - Law/curfew systems</li></ul><h2 id="api-implementation" tabindex="-1">API Implementation <a class="header-anchor" href="#api-implementation" aria-label="Permalink to &quot;API Implementation&quot;">​</a></h2><h3 id="core-api" tabindex="-1">Core API <a class="header-anchor" href="#core-api" aria-label="Permalink to &quot;Core API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>Log(message)</td><td>✅</td><td>Prints a message to the console</td></tr><tr><td>LogWarning(message)</td><td>✅</td><td>Prints a warning message to the console</td></tr><tr><td>LogError(message)</td><td>✅</td><td>Prints an error message to the console</td></tr><tr><td>Wait(seconds, callback)</td><td>✅</td><td>Executes a function after a specified delay</td></tr><tr><td>Delay(seconds, callback)</td><td>✅</td><td>Alias for Wait()</td></tr></tbody></table><h3 id="command-api" tabindex="-1">Command API <a class="header-anchor" href="#command-api" aria-label="Permalink to &quot;Command API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>RegisterCommand(name, description, usage, callback)</td><td>✅</td><td>Registers a custom console command</td></tr><tr><td>UnregisterCommand(name)</td><td>✅</td><td>Removes a registered command</td></tr><tr><td>UnregisterAllCommands()</td><td>✅</td><td>Removes all commands registered by the script</td></tr><tr><td>IsCommandRegistered(name)</td><td>✅</td><td>Checks if a command is already registered</td></tr><tr><td>GetGameCommands()</td><td>✅</td><td>Returns a table of all available game commands</td></tr></tbody></table><h3 id="time-api" tabindex="-1">Time API <a class="header-anchor" href="#time-api" aria-label="Permalink to &quot;Time API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>GetGameTime()</td><td>✅</td><td>Returns the current in-game time (minutes)</td></tr><tr><td>FormatGameTime(timeValue)</td><td>✅</td><td>Formats a time value as a string (HH:MM)</td></tr><tr><td>GetGameDay()</td><td>✅</td><td>Returns the current day name (e.g., &quot;Monday&quot;)</td></tr><tr><td>GetGameDayInt()</td><td>✅</td><td>Returns the current day as a number (1-7)</td></tr><tr><td>IsNightTime()</td><td>✅</td><td>Returns true if it&#39;s currently night time</td></tr><tr><td>SetTime(timeValue)</td><td>📅</td><td>Sets the game time to the specified value</td></tr></tbody></table><h3 id="player-api" tabindex="-1">Player API <a class="header-anchor" href="#player-api" aria-label="Permalink to &quot;Player API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>GetPlayerState()</td><td>✅</td><td>Returns a table with comprehensive player information</td></tr><tr><td>GetPlayerPosition()</td><td>✅</td><td>Returns the player&#39;s position as a Vector3</td></tr><tr><td>SetPlayerPosition(x, y, z)</td><td>✅</td><td>Sets the player&#39;s position</td></tr><tr><td>GetPlayerEnergy()</td><td>✅</td><td>Returns the player&#39;s current energy level</td></tr><tr><td>SetPlayerEnergy(amount)</td><td>✅</td><td>Sets the player&#39;s energy level</td></tr><tr><td>GetPlayerHealth()</td><td>✅</td><td>Returns the player&#39;s current health</td></tr><tr><td>SetPlayerHealth(amount)</td><td>✅</td><td>Sets the player&#39;s health</td></tr><tr><td>GetPlayerRegion()</td><td>✅</td><td>Returns the name of the region the player is in</td></tr><tr><td>GetPlayerMovementSpeed()</td><td>✅</td><td>Returns the player&#39;s current movement speed</td></tr><tr><td>SetPlayerMovementSpeed(speed)</td><td>✅</td><td>Sets the player&#39;s current movement speed</td></tr></tbody></table><h3 id="economy-api" tabindex="-1">Economy API <a class="header-anchor" href="#economy-api" aria-label="Permalink to &quot;Economy API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>GetPlayerCash()</td><td>✅</td><td>Returns the player&#39;s current cash amount</td></tr><tr><td>AddPlayerCash(amount)</td><td>✅</td><td>Adds the specified amount to player&#39;s cash</td></tr><tr><td>RemovePlayerCash(amount)</td><td>✅</td><td>Removes the specified amount from player&#39;s cash</td></tr><tr><td>GetPlayerOnlineBalance()</td><td>✅</td><td>Returns the player&#39;s online bank balance</td></tr><tr><td>AddOnlineBalance(amount)</td><td>✅</td><td>Adds to player&#39;s online balance but UI doesn&#39;t update</td></tr><tr><td>RemoveOnlineBalance(amount)</td><td>✅</td><td>Removes from player&#39;s online balance but UI doesn&#39;t update</td></tr><tr><td>GetLifetimeEarnings()</td><td>✅</td><td>Returns the player&#39;s lifetime earnings</td></tr><tr><td>GetNetWorth()</td><td>✅</td><td>Returns the player&#39;s total net worth</td></tr><tr><td>FormatMoney(amount)</td><td>✅</td><td>Formats a money amount as a string</td></tr><tr><td>CheckIfCanAfford(amount)</td><td>✅</td><td>Checks if the player can afford the specified amount</td></tr><tr><td>CreateTransaction(description, price, quantity, useOnline)</td><td>🔄</td><td>Creates and processes a transaction</td></tr><tr><td>GetATMDepositLimit()</td><td>✅</td><td>Gets the ATM deposit limit</td></tr><tr><td>SetATMDepositLimit(amount)</td><td>✅</td><td>Sets the ATM deposit limit</td></tr></tbody></table><h3 id="gameobject-api" tabindex="-1">GameObject API <a class="header-anchor" href="#gameobject-api" aria-label="Permalink to &quot;GameObject API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>FindGameObject(name)</td><td>✅</td><td>Finds a GameObject by name</td></tr><tr><td>GetPosition(gameObject)</td><td>✅</td><td>Gets position of a GameObject as Vector3</td></tr><tr><td>SetPosition(gameObject, x, y, z)</td><td>✅</td><td>Sets position of a GameObject</td></tr></tbody></table><h3 id="inventory-api" tabindex="-1">Inventory API <a class="header-anchor" href="#inventory-api" aria-label="Permalink to &quot;Inventory API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>GetInventorySlotCount()</td><td>✅</td><td>Returns the number of inventory slots</td></tr><tr><td>GetInventoryItemAt(slotIndex)</td><td>✅</td><td>Returns the item at specified inventory slot</td></tr><tr><td>AddItemToInventory(itemName, amount)</td><td>🟡</td><td>Adds an item to player&#39;s inventory</td></tr><tr><td>RemoveItemFromInventory(itemName, amount)</td><td>🟡</td><td>Removes an item from player&#39;s inventory</td></tr></tbody></table><h3 id="npc-api" tabindex="-1">NPC API <a class="header-anchor" href="#npc-api" aria-label="Permalink to &quot;NPC API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>GetNPC(npcId)</td><td>✅</td><td>Gets NPC data by ID</td></tr><tr><td>GetNPCPosition(npc)</td><td>✅</td><td>Gets an NPC&#39;s position</td></tr><tr><td>SetNPCPosition(npc, x, y, z)</td><td>🔄</td><td>Sets an NPC&#39;s position (Untested)</td></tr><tr><td>GetNPCRegion(npcId)</td><td>✅</td><td>Gets the region an NPC is in</td></tr><tr><td>GetNPCsInRegion(region)</td><td>✅</td><td>Gets all NPCs in a specific region</td></tr><tr><td>GetAllNPCs()</td><td>✅</td><td>Gets a list of all NPCs</td></tr><tr><td>GetAllNPCRegions()</td><td>✅</td><td>Gets a list of all regions with NPCs</td></tr><tr><td>IsNPCInRegion(npcId, region)</td><td>✅</td><td>Checks if an NPC is in a specific region</td></tr></tbody></table><h3 id="ui-api" tabindex="-1">UI API <a class="header-anchor" href="#ui-api" aria-label="Permalink to &quot;UI API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>ShowNotification(message)</td><td>✅</td><td>Shows a notification message</td></tr><tr><td>ShowNotificationWithTimeout(message, timeout)</td><td>✅</td><td>Shows a notification with custom timeout</td></tr><tr><td>HideNotification()</td><td>✅</td><td>Hides currently displayed notification</td></tr><tr><td>ShowMessage(message)</td><td>🟡</td><td>Shows a text message</td></tr><tr><td>CreateWindow(id, title, x, y, width, height)</td><td>✅</td><td>Creates a UI window</td></tr><tr><td>SetWindowPosition(windowId, x, y)</td><td>✅</td><td>Sets a window&#39;s position</td></tr><tr><td>SetWindowSize(windowId, width, height)</td><td>✅</td><td>Sets a window&#39;s size</td></tr><tr><td>ShowWindow(windowId, visible)</td><td>✅</td><td>Shows or hides a window</td></tr><tr><td>DestroyWindow(windowId)</td><td>✅</td><td>Destroys a window</td></tr><tr><td>AddButton(windowId, id, text, callback)</td><td>✅</td><td>Adds a button to a window</td></tr><tr><td>AddLabel(windowId, id, text)</td><td>✅</td><td>Adds a label to a window</td></tr><tr><td>AddTextField(windowId, id, text)</td><td>✅</td><td>Adds a text field to a window</td></tr><tr><td>GetControlText(controlId)</td><td>✅</td><td>Gets the text of a UI control</td></tr><tr><td>SetControlText(controlId, text)</td><td>✅</td><td>Sets the text of a UI control</td></tr><tr><td>SetControlPosition(controlId, x, y)</td><td>✅</td><td>Sets a control&#39;s position</td></tr><tr><td>SetControlSize(controlId, width, height)</td><td>✅</td><td>Sets a control&#39;s size</td></tr><tr><td>ShowControl(controlId, visible)</td><td>✅</td><td>Shows or hides a control</td></tr><tr><td>DestroyControl(controlId)</td><td>✅</td><td>Destroys a control</td></tr><tr><td>ShowDialogue(title, text)</td><td>✅</td><td>Shows a dialogue box</td></tr><tr><td>ShowDialogueWithTimeout(title, text, timeout)</td><td>✅</td><td>Shows a dialogue with timeout</td></tr><tr><td>ShowChoiceDialogue(title, text, choices, callback)</td><td>✅</td><td>Shows a dialogue with choices</td></tr><tr><td>CloseDialogue()</td><td>✅</td><td>Closes the current dialogue</td></tr></tbody></table><h3 id="registry-api" tabindex="-1">Registry API <a class="header-anchor" href="#registry-api" aria-label="Permalink to &quot;Registry API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>IsRegistryReady()</td><td>✅</td><td>Checks if the registry system is ready</td></tr><tr><td>OnRegistryReady(callback)</td><td>✅</td><td>Registers a callback for when registry is ready</td></tr></tbody></table><h3 id="item-registry-api" tabindex="-1">Item Registry API <a class="header-anchor" href="#item-registry-api" aria-label="Permalink to &quot;Item Registry API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>GetItem(itemId)</td><td>✅</td><td>Gets item definition by ID</td></tr><tr><td>DoesItemExist(itemId)</td><td>✅</td><td>Checks if an item exists in the registry</td></tr><tr><td>GetItemCategories()</td><td>🟡</td><td>Gets a list of all item categories</td></tr><tr><td>GetItemsInCategory(categoryName)</td><td>🟡</td><td>Gets all items in a category</td></tr><tr><td>GetAllItems()</td><td>🔄</td><td>Gets a list of all available items</td></tr><tr><td>CreateItem(id, name, description, category, stackLimit)</td><td>🔄</td><td>Creates a new item definition</td></tr><tr><td>CreateQualityItem(id, name, description, category, stackLimit, defaultQuality)</td><td>🔄</td><td>Creates a quality item</td></tr><tr><td>CreateIntegerItem(id, name, description, category, stackLimit, defaultValue)</td><td>🔄</td><td>Creates an integer item</td></tr><tr><td>ModifyItem(itemId, properties)</td><td>✅</td><td>Modifies an existing item&#39;s properties</td></tr><tr><td>CreateItemInstance(itemId, quantity)</td><td>🔄</td><td>Creates an instance of an item</td></tr><tr><td>AddItemToPlayerInventory(itemInstance)</td><td>✅</td><td>Adds an item instance to player inventory</td></tr></tbody></table><h3 id="vector-math-api" tabindex="-1">Vector/Math API <a class="header-anchor" href="#vector-math-api" aria-label="Permalink to &quot;Vector/Math API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>Vector3(x, y, z)</td><td>✅</td><td>Creates a 3D vector</td></tr><tr><td>Vector3Distance(v1, v2)</td><td>✅</td><td>Calculates distance between vectors</td></tr><tr><td>Vector3.zero</td><td>✅</td><td>Constant for zero vector</td></tr><tr><td>Vector3.one</td><td>✅</td><td>Constant for (1,1,1) vector</td></tr><tr><td>Vector3.up/down/left/right/forward/back</td><td>✅</td><td>Direction constants</td></tr></tbody></table><h3 id="law-curfew-api" tabindex="-1">Law/Curfew API <a class="header-anchor" href="#law-curfew-api" aria-label="Permalink to &quot;Law/Curfew API&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>IsCurfewEnabled()</td><td>✅</td><td>Checks if curfew system is enabled</td></tr><tr><td>IsCurfewActive()</td><td>✅</td><td>Checks if curfew is currently active</td></tr><tr><td>IsCurfewActiveWithTolerance()</td><td>✅</td><td>Checks if curfew is active with grace period</td></tr><tr><td>GetCurfewStartTime()</td><td>✅</td><td>Gets the curfew start time</td></tr><tr><td>GetCurfewEndTime()</td><td>✅</td><td>Gets the curfew end time</td></tr><tr><td>GetCurfewWarningTime()</td><td>✅</td><td>Gets the curfew warning time</td></tr><tr><td>GetTimeUntilCurfew()</td><td>✅</td><td>Gets minutes until curfew starts</td></tr></tbody></table><h2 id="script-events" tabindex="-1">Script Events <a class="header-anchor" href="#script-events" aria-label="Permalink to &quot;Script Events&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Event</th><th>Status</th><th>Notes</th></tr></thead><tbody><tr><td>Initialize()</td><td>✅</td><td>Called when script is first loaded</td></tr><tr><td>Update()</td><td>✅</td><td>Called every frame</td></tr><tr><td>Shutdown()</td><td>✅</td><td>Called when script is unloaded</td></tr><tr><td>OnPlayerReady()</td><td>✅</td><td>Called when player character is fully initialized</td></tr><tr><td>OnConsoleReady()</td><td>✅</td><td>Called when console is fully loaded</td></tr><tr><td>OnRegistryReady()</td><td>✅</td><td>Called when registry system is fully loaded</td></tr><tr><td>OnSceneLoaded(sceneName)</td><td>✅</td><td>Called when a scene is loaded</td></tr><tr><td>OnDayChanged(dayName, dayIndex)</td><td>✅</td><td>Called when game day changes</td></tr><tr><td>OnTimeChanged(timeValue)</td><td>✅</td><td>Called when game time changes</td></tr><tr><td>OnPlayerHealthChanged(oldValue, newValue)</td><td>✅</td><td>Called when player health changes</td></tr><tr><td>OnPlayerEnergyChanged(oldValue, newValue)</td><td>✅</td><td>Called when player energy changes</td></tr><tr><td>OnSleepStart()</td><td>🟡</td><td>Called when player goes to sleep</td></tr><tr><td>OnSleepEnd()</td><td>🟡</td><td>Called when player wakes up</td></tr><tr><td>OnItemAdded()</td><td>🔄</td><td>Called when inventory changes</td></tr><tr><td>OnItemRemoved()</td><td>🔄</td><td>Called when inventory changes</td></tr><tr><td>OnPlayerMoneyChanged()</td><td>✅</td><td>Called when player money changes</td></tr><tr><td>OnCurfewEnabled()</td><td>✅</td><td>Called when curfew system is enabled</td></tr><tr><td>OnCurfewDisabled()</td><td>✅</td><td>Called when curfew system is disabled</td></tr><tr><td>OnCurfewWarning()</td><td>✅</td><td>Called when curfew warning is issued</td></tr><tr><td>OnCurfewHint()</td><td>✅</td><td>Called when curfew hint is shown</td></tr></tbody></table><h2 id="known-issues" tabindex="-1">Known Issues <a class="header-anchor" href="#known-issues" aria-label="Permalink to &quot;Known Issues&quot;">​</a></h2><ul><li>UI functions may break upon hot-reload</li><li>Networking is not explicitly handled in any scenario</li><li>When modifying player&#39;s online balance with AddOnlineBalance() or RemoveOnlineBalance(), the actual balance changes correctly but the UI display in the hotbar does not update</li></ul><h2 id="reporting-issues" tabindex="-1">Reporting Issues <a class="header-anchor" href="#reporting-issues" aria-label="Permalink to &quot;Reporting Issues&quot;">​</a></h2><p>If you encounter bugs or have suggestions:</p><ol><li>Check if the issue is already known in this documentation</li><li>Test with the latest beta version</li><li>Provide a minimal example script that reproduces the issue</li><li>Report the issue through our <a href="https://github.com/ScheduleLua/ScheduleLua-Framework/issues" target="_blank" rel="noreferrer">GitHub Issues</a> or <a href="https://discord.gg/Ab8snpEFDn" target="_blank" rel="noreferrer">Discord</a></li></ol><h2 id="credits-and-acknowledgments" tabindex="-1">Credits and Acknowledgments <a class="header-anchor" href="#credits-and-acknowledgments" aria-label="Permalink to &quot;Credits and Acknowledgments&quot;">​</a></h2><p>ScheduleLua is currently developed and maintained by a single developer. As a one-person project, updates and new features may be released at a slower pace compared to larger projects. Your patience and understanding are greatly appreciated!</p><p>If you&#39;re interested in contributing to the project, whether through code contributions, testing, or documentation improvements, please see the <a href="/ScheduleLua-Docs/guide/contributing.html">Contributing</a> page. Every contribution helps make ScheduleLua better for everyone.</p><h2 id="beta-testing" tabindex="-1">Beta Testing <a class="header-anchor" href="#beta-testing" aria-label="Permalink to &quot;Beta Testing&quot;">​</a></h2><p>Your participation in beta testing is invaluable! Please provide feedback on:</p><ul><li>Features that work well or need improvement</li><li>Documentation clarity and completeness</li><li>Performance issues or crashes</li><li>Script examples that would be helpful</li></ul><p>Thank you for helping improve ScheduleLua!</p>',52)]))}const p=e(i,[["render",n]]);export{m as __pageData,p as default};
