import{_ as t,c as i,o,ag as a}from"./chunks/framework.D8iaFA0a.js";const h=JSON.parse('{"title":"Contributing to ScheduleLua","description":"","frontmatter":{},"headers":[],"relativePath":"guide/contributing.md","filePath":"guide/contributing.md","lastUpdated":1747817230000}'),n={name:"guide/contributing.md"};function l(s,e,r,u,c,d){return o(),i("div",null,e[0]||(e[0]=[a(`<h1 id="contributing-to-schedulelua" tabindex="-1">Contributing to ScheduleLua <a class="header-anchor" href="#contributing-to-schedulelua" aria-label="Permalink to &quot;Contributing to ScheduleLua&quot;">​</a></h1><p>Thank you for your interest in contributing to ScheduleLua! This guide will help you understand how to contribute to the project effectively.</p><h2 id="ways-to-contribute" tabindex="-1">Ways to Contribute <a class="header-anchor" href="#ways-to-contribute" aria-label="Permalink to &quot;Ways to Contribute&quot;">​</a></h2><p>There are several ways you can contribute to ScheduleLua:</p><ul><li><strong>Code contributions</strong>: Implement new features or fix bugs</li><li><strong>Documentation</strong>: Improve existing documentation or add new guides</li><li><strong>Examples</strong>: Create example scripts that demonstrate API usage</li><li><strong>Bug reports</strong>: Report issues you encounter</li><li><strong>Feature requests</strong>: Suggest new features or improvements</li><li><strong>Community support</strong>: Help other users in discussions and forums</li></ul><h2 id="setting-up-development-environment" tabindex="-1">Setting Up Development Environment <a class="header-anchor" href="#setting-up-development-environment" aria-label="Permalink to &quot;Setting Up Development Environment&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ul><li><a href="https://visualstudio.microsoft.com/downloads/" target="_blank" rel="noreferrer">Visual Studio</a></li><li><a href="https://melonwiki.xyz/#/README" target="_blank" rel="noreferrer">MelonLoader</a></li><li><a href="https://github.com/moonsharp-devs/moonsharp/releases" target="_blank" rel="noreferrer">MoonSharp Interpreter (.NET 3.5)</a> - Download the latest release and extract the .NET 3.5 DLL from <code>interpreter/net35/MoonSharp.Interpreter.dll</code></li><li>Basic knowledge of C# and Lua</li></ul><h3 id="getting-the-source" tabindex="-1">Getting the Source <a class="header-anchor" href="#getting-the-source" aria-label="Permalink to &quot;Getting the Source&quot;">​</a></h3><ol><li>Fork the repository on GitHub</li><li>Clone your fork locally:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/YOUR-USERNAME/ScheduleLua-Framework.git</span></span></code></pre></div></li><li>Add the upstream repository as a remote:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git remote add upstream https://github.com/ScheduleLua/ScheduleLua-Framework.git</span></span></code></pre></div></li></ol><h3 id="building-the-project" tabindex="-1">Building the Project <a class="header-anchor" href="#building-the-project" aria-label="Permalink to &quot;Building the Project&quot;">​</a></h3><ol><li>Open the solution file (<code>ScheduleLua.sln</code>) in Visual Studio</li><li>Add the MoonSharp .NET 3.5 DLL as an assembly reference to the project <ul><li>Right-click on &quot;References&quot; in Solution Explorer</li><li>Select &quot;Add Reference...&quot;</li><li>Click &quot;Browse&quot; and locate the MoonSharp DLL you downloaded</li><li>Click &quot;Add&quot; and then &quot;OK&quot;</li></ul></li><li>Build the solution</li><li>The compiled DLL will be copied to your Schedule 1 mods folder, and Visual Studio will start your Schedule 1 game</li></ol><h2 id="contribution-workflow" tabindex="-1">Contribution Workflow <a class="header-anchor" href="#contribution-workflow" aria-label="Permalink to &quot;Contribution Workflow&quot;">​</a></h2><ol><li><p><strong>Fork the repository</strong>: Create your own fork of the ScheduleLua repository on GitHub</p><ul><li>Click the &quot;Fork&quot; button at the top right of the <a href="https://github.com/ScheduleLua/ScheduleLua-Framework" target="_blank" rel="noreferrer">ScheduleLua repository</a></li></ul></li><li><p><strong>Clone your fork</strong>: Download your fork to your local machine</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone https://github.com/YOUR-USERNAME/ScheduleLua-Framework.git</span></span>
<span class="line"><span>cd ScheduleLua</span></span></code></pre></div></li><li><p><strong>Make your changes</strong>: Implement your feature or fix the bug</p></li><li><p><strong>Follow coding standards</strong>:</p><ul><li>Use consistent indentation (4 spaces)</li><li>Follow C# naming conventions</li><li>Include XML documentation comments for public APIs</li><li>Add appropriate exception handling</li></ul></li><li><p><strong>Test your changes</strong>: Ensure your changes work as expected in the game</p></li><li><p><strong>Commit your changes</strong>: Use clear commit messages that explain what and why</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git commit -m &quot;Added feature: description of what was added&quot;</span></span></code></pre></div></li><li><p><strong>Push to your fork</strong>: Upload your changes to your GitHub fork</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git push origin main</span></span></code></pre></div></li><li><p><strong>Create a Pull Request</strong>: Go to the original ScheduleLua repository and click &quot;New Pull Request&quot;</p><ul><li>Select &quot;compare across forks&quot;</li><li>Select your fork and branch as the source</li><li>The main ScheduleLua repository and branch as the destination</li><li>Fill out the PR template with a clear description of your changes</li></ul></li><li><p><strong>Respond to feedback</strong>: Be prepared to make additional changes based on the code review</p></li></ol><h3 id="keeping-your-fork-updated" tabindex="-1">Keeping Your Fork Updated <a class="header-anchor" href="#keeping-your-fork-updated" aria-label="Permalink to &quot;Keeping Your Fork Updated&quot;">​</a></h3><p>Regularly sync your fork with the upstream repository:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git remote add upstream https://github.com/ScheduleLua/ScheduleLua-Framework.git</span></span>
<span class="line"><span>git fetch upstream</span></span>
<span class="line"><span>git checkout main</span></span>
<span class="line"><span>git merge upstream/main</span></span>
<span class="line"><span>git push origin main</span></span></code></pre></div><h3 id="for-documentation-changes" tabindex="-1">For Documentation Changes <a class="header-anchor" href="#for-documentation-changes" aria-label="Permalink to &quot;For Documentation Changes&quot;">​</a></h3><p>The ScheduleLua documentation uses VitePress, a static site generator optimized for documentation sites. When contributing to documentation:</p><ol><li><p><strong>Focus on Markdown Files</strong>: All documentation is in Markdown files in the <code>docs/</code> directory</p><ul><li>Each <code>.md</code> file becomes a page in the documentation site</li><li>File names become part of the URL structure</li></ul></li><li><p><strong>Follow VitePress Conventions</strong>:</p><ul><li>Use standard Markdown for most content</li><li>Organize content with proper headings (starting with <code>##</code> for main sections)</li><li>Use relative links to reference other documentation pages</li></ul></li><li><p><strong>Use VitePress-specific Features</strong>:</p><ul><li>Use <code>:::tip</code>, <code>:::warning</code>, and <code>:::danger</code> containers for callouts</li><li>Use code blocks with syntax highlighting by specifying the language: \`\`\`lua</li></ul></li><li><p><strong>Preview Your Changes</strong>:</p><ul><li>Install dependencies: <code>npm install</code></li><li>Start local dev server: <code>npm run docs:dev</code></li><li>Your changes will be visible at <code>http://localhost:5173/</code></li></ul></li><li><p><strong>Keep Documentation Consistent</strong>:</p><ul><li>Follow existing documentation style and tone</li><li>Use the same formatting patterns as other pages</li><li>Keep explanations clear and concise with examples</li></ul></li><li><p><strong>Submit Documentation PRs</strong> the same way as code PRs:</p><ul><li>Push changes to your fork</li><li>Create a Pull Request to the main repository</li></ul></li></ol><h2 id="pull-request-guidelines" tabindex="-1">Pull Request Guidelines <a class="header-anchor" href="#pull-request-guidelines" aria-label="Permalink to &quot;Pull Request Guidelines&quot;">​</a></h2><p>When submitting a PR, please:</p><ol><li><strong>Describe your changes</strong>: Explain what your PR does and why it should be included</li><li><strong>Link related issues</strong>: Reference any related issues with &quot;Fixes #12&quot; or &quot;Relates to #3&quot;</li><li><strong>Keep it focused</strong>: Each PR should address a single concern, don&#39;t make PR to refactor the entire framework, it will be closed</li><li><strong>Be responsive</strong>: Respond to review comments and make requested changes</li><li><strong>Be patient</strong>: PRs are reviewed as time permits</li></ol><h2 id="documentation-guidelines" tabindex="-1">Documentation Guidelines <a class="header-anchor" href="#documentation-guidelines" aria-label="Permalink to &quot;Documentation Guidelines&quot;">​</a></h2><p>When writing documentation:</p><ol><li>Use clear, concise language</li><li>Include code examples where appropriate</li><li>Structure content with proper headings</li><li>Link to related documentation when relevant</li><li>Follow the existing documentation format</li></ol><h2 id="creating-example-scripts" tabindex="-1">Creating Example Scripts <a class="header-anchor" href="#creating-example-scripts" aria-label="Permalink to &quot;Creating Example Scripts&quot;">​</a></h2><p>Example scripts are valuable for demonstrating how to use ScheduleLua. When creating examples:</p><ol><li>Place scripts in the <code>ScheduleLua/Resources</code> directory of the <code>ScheduleLua</code> GitHub Repository</li><li>Include detailed comments explaining what the code does</li><li>Focus on demonstrating specific features or patterns</li><li>Ensure examples are complete and functional</li><li>Follow <a href="https://www.lua.org/manual/5.2/" target="_blank" rel="noreferrer">best practices for Lua 5.2 scripting</a></li></ol><h2 id="bug-reports" tabindex="-1">Bug Reports <a class="header-anchor" href="#bug-reports" aria-label="Permalink to &quot;Bug Reports&quot;">​</a></h2><p>When reporting bugs:</p><ol><li>Check if the bug has already been reported</li><li>Use the issue template if available</li><li>Include detailed steps to reproduce the issue</li><li>Provide information about your environment (OS, game version, etc.)</li><li>Include any error messages or logs</li><li>Attach screenshots or videos if they help illustrate the issue</li></ol><h2 id="feature-requests" tabindex="-1">Feature Requests <a class="header-anchor" href="#feature-requests" aria-label="Permalink to &quot;Feature Requests&quot;">​</a></h2><p>When requesting features:</p><ol><li>Check if the feature has already been requested</li><li>Use the feature request template if available</li><li>Clearly describe the feature and its use case</li><li>Explain why it would be valuable to the project</li><li>Provide examples of how the feature might work</li></ol><h2 id="community-guidelines" tabindex="-1">Community Guidelines <a class="header-anchor" href="#community-guidelines" aria-label="Permalink to &quot;Community Guidelines&quot;">​</a></h2><p>When participating in the ScheduleLua community:</p><ol><li>Be respectful and inclusive</li><li>Help newcomers with patience and understanding</li><li>Give constructive feedback</li><li>Stay on topic in discussions</li><li>Follow the project&#39;s code of conduct</li></ol><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>By contributing to ScheduleLua, you agree that your contributions will be licensed under the same license as the project.</p><p>Thank you for contributing to ScheduleLua and helping make it better for everyone!</p>`,41)]))}const g=t(n,[["render",l]]);export{h as __pageData,g as default};
